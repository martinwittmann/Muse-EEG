<!DOCTYPE html>
<html lang="en">
  <head>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.1.9/p5.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.1.9/addons/p5.sound.min.js"></script>
    <meta charset="utf-8" />
<script src="https://unpkg.com/p5ble@0.0.4/dist/p5.ble.js" type="text/javascript"></script>


<script>
window.addEventListener('error', function(error) {
if (ChromeSamples && ChromeSamples.setStatus) {
console.error(error);
ChromeSamples.setStatus(error.message + ' (Your browser may not support this feature.)');
error.preventDefault();
}
});


</script>

  </head>

  <body>


<form>
  <button id="scan">Scan</button>
  <button id="disconnect">Disconnect</button>
  <button id="reconnect">Stream Starten</button>
</form>


<script>
  var ChromeSamples = {
    log: function() {
      var line = Array.prototype.slice.call(arguments).map(function(argument) {
        return typeof argument === 'string' ? argument : JSON.stringify(argument);
      }).join(' ');

      document.querySelector('#log').textContent += line + '\n';
    },

    clearLog: function() {
      document.querySelector('#log').textContent = '';
    },

    setStatus: function(status) {
      document.querySelector('#status').textContent = status;
    },

    setContent: function(newContent) {
      var content = document.querySelector('#content');
      while(content.hasChildNodes()) {
        content.removeChild(content.lastChild);
      }
      content.appendChild(newContent);
    }
  };
</script>

<h3>Live Output</h3>
<div id="output" class="output">
  <div id="content"></div>
  <div id="status"></div>
  <pre id="log"></pre>
</div>


<p>
  <script>
  if (/Chrome\/(\d+\.\d+.\d+.\d+)/.test(navigator.userAgent)){
    // Let's log a warning if the sample is not supposed to execute on this
    // version of Chrome.
    if (45 > parseInt(RegExp.$1)) {
      ChromeSamples.setStatus('Warning! Keep in mind this sample has been tested with Chrome ' + 45 + '.');
    }
  }
</script>
  <script>

var bluetoothDevice;

function onScanButtonClick() {
var options = {filters: []};
//options.filters.push({namePrefix: 'MuseS'});
options.filters.push({name: 'MuseS-36B3'});

  bluetoothDevice = null;
  log('Requesting Bluetooth Device...');
  navigator.bluetooth.requestDevice(options)
  .then(device => {
    bluetoothDevice = device;
    bluetoothDevice.addEventListener('gattserverdisconnected', onDisconnected);
    return connect();
  })
  .catch(error => {
    log('Argh! ' + error);
  });
}

function connect() {
  log('Connecting to Bluetooth Device...');
  return bluetoothDevice.gatt.connect()
  .then(server => {
    log('> Bluetooth Device connected');
  });
}

function onDisconnectButtonClick() {
  if (!bluetoothDevice) {
    return;
  }
  log('Disconnecting from Bluetooth Device...');
  if (bluetoothDevice.gatt.connected) {
    bluetoothDevice.gatt.disconnect();
  } else {
    log('> Bluetooth Device is already disconnected');
  }
}

function onDisconnected(event) {
  // Object event.target is Bluetooth Device getting disconnected.
  log('> Bluetooth Device disconnected');
}


function onReconnectButtonClick() {
let    serviceUuid = parseInt('0xFE8D'); // MUSE_GATT_CUSTOM_SERVICE
let MUSE_GATT_ATTR_STREAM_TOGGLE='273e0001-4c4d-454d-96be-f03bac821358';
let MUSE_GATT_ATTR_TP9='273e0003-4c4d-454d-96be-f03bac821358';

  log('Requesting Bluetooth Device...');
  navigator.bluetooth.requestDevice({filters: [{services: [serviceUuid]}]})
  .then(device => {
    log('Connecting to GATT Server...');
    return device.gatt.connect();
  })
  .then(server => {
    log('Getting Service...');
    return server.getPrimaryService(serviceUuid);
  })
  .then(service_stream_toggle => {
    log('Getting Characteristic StreamToggle...');
    return service_stream_toggle.getCharacteristic(MUSE_GATT_ATTR_STREAM_TOGGLE);
  })
  .then(characteristic => {
    log('> Characteristic UUID:  ' + characteristic.uuid);
    log('> Broadcast:            ' + characteristic.properties.broadcast);
    log('> Read:                 ' + characteristic.properties.read);
    log('> Write w/o response:   ' + characteristic.properties.writeWithoutResponse);
    log('> Write:                ' + characteristic.properties.write);
    log('> Notify:               ' + characteristic.properties.notify);
    log('> Indicate:             ' + characteristic.properties.indicate);
    log('> Signed Write:         ' + characteristic.properties.authenticatedSignedWrites);
    log('> Queued Write:         ' + characteristic.properties.reliableWrite);
    log('> Writable Auxiliaries: ' + characteristic.properties.writableAuxiliaries);
	log('1 schreiben...');
    myCharacteristic = characteristic;
	let StreamStarten = Uint8Array.of(1);
	characteristic.writeValue(StreamStarten);
	log('> Wert 1 fuer Stream gesetzt');
    return myCharacteristic.startNotifications().then(_ => {
      log('> Notifications started');
      myCharacteristic.addEventListener('characteristicvaluechanged',
          handleNotifications);
    })
	  .then(service_tp9 => {
    log('Getting Characteristic TP9...' + MUSE_GATT_ATTR_TP9);
    return service_tp9.getCharacteristic(MUSE_GATT_ATTR_TP9);
  });	
  })

  .catch(error => {
    log('Argh! ' + error);
  });
}

  

function handleNotifications(event) {
alert();
  let value = event.target.value;
  let a = [];
  // Convert raw data bytes to hex values just for the sake of showing something.
  // In the "real" world, you'd use data.getUint8, data.getUint16 or even
  // TextDecoder to process raw data bytes.
  for (let i = 0; i < value.byteLength; i++) {
    a.push('0x' + ('00' + value.getUint8(i).toString(16)).slice(-2));
  }
  log('> ' + a.join(' '));

}
</script>

<script>
  document.querySelector('form').addEventListener('submit', function(event) {
    event.stopPropagation();
    event.preventDefault();

    if (isWebBluetoothEnabled()) {
      ChromeSamples.clearLog();
      onButtonClick();
    }
  });

  document.querySelector('#scan').addEventListener('click', function(event) {
    event.stopPropagation();
    event.preventDefault();

    if (isWebBluetoothEnabled()) {
      ChromeSamples.clearLog();
      onScanButtonClick();
    }
  });
  document.querySelector('#disconnect').addEventListener('click', function(event) {
    event.stopPropagation();
    event.preventDefault();

    if (isWebBluetoothEnabled()) {
      onDisconnectButtonClick();
    }
  });
  document.querySelector('#reconnect').addEventListener('click', function(event) {
    event.stopPropagation();
    event.preventDefault();

    if (isWebBluetoothEnabled()) {
      onReconnectButtonClick();
    }
  });
</script>
  <script>
  log = ChromeSamples.log;

  function isWebBluetoothEnabled() {
    if (navigator.bluetooth) {
      return true;
    } else {
      ChromeSamples.setStatus('Web Bluetooth API is not available.\n' +
          'Please make sure the "Experimental Web Platform features" flag is enabled.');
      return false;
    }
  }
</script>
</p>
<p><font size="2" face="Verdana, Arial, Helvetica, sans-serif"><b>Bluetooth-Daten 
  von MuseS-36B3:</b></font></p>
<p><font size="2" face="Verdana, Arial, Helvetica, sans-serif"><b>Generic Attribute:</b></font></p>
<p><font size="2" face="Verdana, Arial, Helvetica, sans-serif">Primary Service: 
  0x1801 <br>
  Service Changed<br>
  UUID: 00002A05-0000-1000-8000-00805F9B34FB<br>
  Properties: INDICATE</font></p>
<p><font size="2" face="Verdana, Arial, Helvetica, sans-serif">Descriptors: </font></p>
<p><font size="2" face="Verdana, Arial, Helvetica, sans-serif">Client CHaracteristic 
  Configuration<br>
  UUID: 0x2902</font></p>
<p>&nbsp;</p>
<p><font size="2" face="Verdana, Arial, Helvetica, sans-serif"><b>Generic Access:</b></font></p>
<p><font size="2" face="Verdana, Arial, Helvetica, sans-serif"><b>PRIMARY SERVICE:</b> 
  0x1800</font></p>
<p><font size="2" face="Verdana, Arial, Helvetica, sans-serif">Device Name:<br>
  UUID: 00002A00-0000-1000-8000-00805F9B34FB [READ, WRITEWITHOUTRESPONSE, WRITE, 
  AUTHENTICATEDSIGNEDWRITES]<br>
  Properties: READ, WRITE, WRITE_NO_RESPONSE<br>
  Write Type: WRITE REQUEST</font></p>
<p><font size="2" face="Verdana, Arial, Helvetica, sans-serif">Appearance:<br>
  UUID: 00002A01-0000-1000-8000-00805F9B34FB [READ, WRITEWITHOUTRESPONSE, WRITE, 
  AUTHENTICATEDSIGNEDWRITES]<br>
  Properties: READ, WRITE, WRITE_NO_RESPONSE<br>
  Write Type: WRITE REQUEST</font></p>
<p><font size="2" face="Verdana, Arial, Helvetica, sans-serif">Peripheral preferred 
  connection parameters:<br>
  UUID: 00002A04-0000-1000-8000-00805F9B34FB [READ]<br>
  Properties: READ</font></p>
<p><font size="2" face="Verdana, Arial, Helvetica, sans-serif">00002a05-0000-1000-8000-00805f9b34fb 
  [INDICATE]</font></p>
<p><font size="2" face="Verdana, Arial, Helvetica, sans-serif">CUSTOM SERVICE<br>
  0000<b>FE8D</b>-0000-1000-8000-00805F9B34FB = MUSE_GATT_CUSTOM_SERVICE<br>
  Primary Service</font></p>
<p><font size="2" face="Verdana, Arial, Helvetica, sans-serif"><b>Service: 0xFE8D: 
  </b><br>
  Characteristics: <br>
  Characteristic: 273e0001-4c4d-454d-96be-f03bac821358 =MUSE_GATT_ATTR_STREAM_TOGGLE 
  [WRITEWITHOUTRESPONSE, NOTIFY] <br>
  Descriptor: 00002902-0000-1000-8000-00805f9b34fb<br>
  Characteristic: 273e0002-4c4d-454d-96be-f03bac821358 = [NOTIFY]<br>
  Descriptor: 00002902-0000-1000-8000-00805f9b34fb<br>
  Characteristic: 273e0003-4c4d-454d-96be-f03bac821358 =MUSE_GATT_ATTR_TP9 [NOTIFY] 
  <br>
  Descriptor: 00002902-0000-1000-8000-00805f9b34fb<br>
  Characteristic: 273e0004-4c4d-454d-96be-f03bac821358 =MUSE_GATT_ATTR_AF7 [NOTIFY] 
  <br>
  Descriptor: 00002902-0000-1000-8000-00805f9b34fb <br>
  Characteristic: 273e0005-4c4d-454d-96be-f03bac821358 =MUSE_GATT_ATTR_AF8 [NOTIFY] 
  <br>
  Descriptor: 00002902-0000-1000-8000-00805f9b34fb </font> <font size="2" face="Verdana, Arial, Helvetica, sans-serif"><br>
  Characteristic: 273e0006-4c4d-454d-96be-f03bac821358 =MUSE_GATT_ATTR_TP10 [NOTIFY] 
  <br>
  Descriptor: 00002902-0000-1000-8000-00805f9b34fb </font> <font size="2" face="Verdana, Arial, Helvetica, sans-serif"><br>
  Characteristic: 273e0007-4c4d-454d-96be-f03bac821358 =MUSE_GATT_ATTR_RIGHTAUX 
  [NOTIFY] <br>
  Descriptor: 00002902-0000-1000-8000-00805f9b34fb </font> <font size="2" face="Verdana, Arial, Helvetica, sans-serif"><br>
  Characteristic: 273e0008-4c4d-454d-96be-f03bac821358 = [NOTIFY]<br>
  Descriptor: 00002902-0000-1000-8000-00805f9b34fb </font> <font size="2" face="Verdana, Arial, Helvetica, sans-serif"><br>
  Characteristic: 273e0009-4c4d-454d-96be-f03bac821358 =MUSE_GATT_ATTR_GYRO [NOTIFY] 
  <br>
  Descriptor: 00002902-0000-1000-8000-00805f9b34fb </font> <font size="2" face="Verdana, Arial, Helvetica, sans-serif"><br>
  Characteristic: 273e000a-4c4d-454d-96be-f03bac821358 =MUSE_GATT_ATTR_ACCELEROMETER 
  [NOTIFY] <br>
  Descriptor: 00002902-0000-1000-8000-00805f9b34fb </font> <font size="2" face="Verdana, Arial, Helvetica, sans-serif"><br>
  Characteristic: 273e000b-4c4d-454d-96be-f03bac821358 =MUSE_GATT_ATTR_TELEMETRY 
  [NOTIFY] <br>
  Descriptor: 00002902-0000-1000-8000-00805f9b34fb </font> <font size="2" face="Verdana, Arial, Helvetica, sans-serif"><br>
  Characteristic: 273e000c-4c4d-454d-96be-f03bac821358 = [NOTIFY]<br>
  Descriptor: 00002902-0000-1000-8000-00805f9b34fb </font> <font size="2" face="Verdana, Arial, Helvetica, sans-serif"><br>
  Characteristic: 273e000d-4c4d-454d-96be-f03bac821358 = [NOTIFY]<br>
  Descriptor: 00002902-0000-1000-8000-00805f9b34fb </font> <font size="2" face="Verdana, Arial, Helvetica, sans-serif"><br>
  Characteristic: 273e000e-4c4d-454d-96be-f03bac821358 = [NOTIFY]<br>
  Descriptor: 00002902-0000-1000-8000-00805f9b34fb </font> <font size="2" face="Verdana, Arial, Helvetica, sans-serif"><br>
  Characteristic: 273e000f-4c4d-454d-96be-f03bac821358 =MUSE_GATT_ATTR_PPG1 [NOTIFY] 
  <br>
  Descriptor: 00002902-0000-1000-8000-00805f9b34fb </font> <font size="2" face="Verdana, Arial, Helvetica, sans-serif"><br>
  Characteristic: 273e0010-4c4d-454d-96be-f03bac821358 =MUSE_GATT_ATTR_PPG2 [NOTIFY] 
  <br>
  Descriptor: 00002902-0000-1000-8000-00805f9b34fb </font> <font size="2" face="Verdana, Arial, Helvetica, sans-serif"><br>
  Characteristic: 273e0011-4c4d-454d-96be-f03bac821358 =MUSE_GATT_ATTR_PPG3 [NOTIFY]<br>
  Descriptor: 00002902-0000-1000-8000-00805f9b34fb </font> <font size="2" face="Verdana, Arial, Helvetica, sans-serif"><br>
  Characteristic: 273e0012-4c4d-454d-96be-f03bac821358 = [NOTIFY]<br>
  Descriptor: 00002902-0000-1000-8000-00805f9b34fb </font> </p>
<p><font size="2" face="Verdana, Arial, Helvetica, sans-serif"><br>
  </font></p>
<p>&nbsp;</p>
<p><font size="2" face="Verdana, Arial, Helvetica, sans-serif"><br>
  <br>
  UUID von MuseS: 0000180a-0000-1000-8000-00805f9b34fb <br>
  <br>
  <br>
  <br>
  attr handle: 0x0001, end grp handle: 0x0004 uuid: 00001801-0000-1000-8000-00805f9b34fb 
  <br>
  attr handle: 0x0005, end grp handle: 0x000b uuid: 00001800-0000-1000-8000-00805f9b34fb 
  <br>
  attr handle: 0x000c, end grp handle: 0x002d uuid: 0000fe8d-0000-1000-8000-00805f9b34fb 
  <br>
  </font></p>
<p><font size="2" face="Verdana, Arial, Helvetica, sans-serif"> characteristics 
  <br>
  handle: 0x0002, char properties: 0x20, char value handle: 0x0003, uuid: 00002a05-0000-1000-8000-00805f9b34fb 
  <br>
  handle: 0x0006, char properties: 0x4e, char value handle: 0x0007, uuid: 00002a00-0000-1000-8000-00805f9b34fb 
  <br>
  handle: 0x0008, char properties: 0x4e, char value handle: 0x0009, uuid: 00002a01-0000-1000-8000-00805f9b34fb 
  <br>
  handle: 0x000a, char properties: 0x0a, char value handle: 0x000b, uuid: 00002a04-0000-1000-8000-00805f9b34fb 
  <br>
  handle: 0x000d, char properties: 0x14, char value handle: 0x000e, uuid: 273e0001-4c4d-454d-96be-f03bac821358 
  <br>
  handle: 0x0010, char properties: 0x10, char value handle: 0x0011, uuid: 273e0008-4c4d-454d-96be-f03bac821358 
  <br>
  handle: 0x0013, char properties: 0x10, char value handle: 0x0014, uuid: 273e0009-4c4d-454d-96be-f03bac821358 
  <br>
  handle: 0x0016, char properties: 0x10, char value handle: 0x0017, uuid: 273e000a-4c4d-454d-96be-f03bac821358 
  <br>
  handle: 0x0019, char properties: 0x10, char value handle: 0x001a, uuid: 273e000b-4c4d-454d-96be-f03bac821358 
  <br>
  handle: 0x001c, char properties: 0x10, char value handle: 0x001d, uuid: 273e0002-4c4d-454d-96be-f03bac821358 
  <br>
  handle: 0x001f, char properties: 0x10, char value handle: 0x0020, uuid: 273e0003-4c4d-454d-96be-f03bac821358 
  <br>
  handle: 0x0022, char properties: 0x10, char value handle: 0x0023, uuid: 273e0004-4c4d-454d-96be-f03bac821358 
  <br>
  handle: 0x0025, char properties: 0x10, char value handle: 0x0026, uuid: 273e0005-4c4d-454d-96be-f03bac821358 
  <br>
  handle: 0x0028, char properties: 0x10, char value handle: 0x0029, uuid: 273e0006-4c4d-454d-96be-f03bac821358 
  <br>
  handle: 0x002b, char properties: 0x10, char value handle: 0x002c, uuid: 273e0007-4c4d-454d-96be-f03bac821358 
  </font> </p>
</body>
</html>